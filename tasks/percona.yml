##
# Percona database setup.
#
#

- name: Adds percona key
  apt_key:
    keyserver: keys.gnupg.net
    id: 9334A25F8507EFA5

- name: Adds percona repositories
  apt_repository:
    repo: 'deb http://repo.percona.com/apt {{ ansible_distribution_release }} main'
    state: present

# debconf-get-selections | grep percona
- name: Sets root password
  debconf:
    name: "percona-server-server-5.6"
    question: "{{ item }}"
    value: "{{ percona_root_password }}"
    vtype: 'password'
  changed_when: false
  with_items:
    - 'percona-server-server/root_password'
    - 'percona-server-server/root_password_again'

- name: Installs percona-server
  apt:
    pkg: "percona-server-server-{{ percona_version }}"
    state: present

- name: Installs additional tools
  apt:
    pkg: "{{ item }}"
    state: latest
  with_items:
    - percona-xtrabackup
    - percona-toolkit

- name: Adds mysql config
  template:
    src: "../templates/my.cnf.j2"
    dest: "/etc/mysql/my.cnf"
  notify: Restart percona
  tags: percona:config

- meta: flush_handlers

- name: Adds Python MySQL support
  apt: pkg="python-mysqldb" state=latest

# # In this case, mysql_user will fail connecting to mysql
# - name: Sets the root password (first attempt / failure is ok)
#   mysql_user:
#     user: root
#     password: "{{ percona_root_password }}"
#     host: localhost
#   ignore_errors: yes

- name: Configures for easy access as root user
  template:
    src: "../templates/root_my.cnf.j2"
    dest: /root/.my.cnf
    mode: 0600

# - name: Sets the root password (second attempt)
#   mysql_user:
#     user: root
#     password: "{{ percona_root_password }}"
#     host: localhost
#   ignore_errors: yes

- name: Deletes anonymous MySQL server user for ansible_fqdn
  mysql_user:
    user: ""
    host: "{{ ansible_fqdn }}"
    state: "absent"

- name: Deletes anonymous MySQL server user for localhost
  mysql_user:
    user: ""
    state: "absent"

- name: Adds required MySQL users
  mysql_user:
    user: "{{ item.name }}"
    password: "{{ item.password }}"
    priv: "{{ item.privs }}"
  with_items: mysql_users
  when: mysql_users is defined

- name: Adds required MySQL users with hosts
  mysql_user: >
    user: "{{ item.name }}"
    password: "{{ item.password }}"
    priv: "{{ item.privs }}"
    host: "{{ item.host }}"
  with_items: mysql_users
  when: item.host is defined and mysql_users is defined

- name: Secures the MySQL root user for IPV6 localhost (::1)
  mysql_user:
    user: "root"
    password: "{{ percona_root_password }}"
    host: "::1"

- name: Secures the MySQL root user for IPV4 localhost (127.0.0.1)
  mysql_user:
    user: "root"
    password: "{{ percona_root_password }}"
    host: "127.0.0.1"

- name: Secures the MySQL root user for localhost domain (localhost)
  mysql_user:
    user: "root"
    password: "{{ percona_root_password }}"
    host: "localhost"

- name: Secures the MySQL root user for server_hostname domain
  mysql_user:
    user: "root"
    password: "{{ percona_root_password }}"
    host: "{{ ansible_fqdn }}"

- name: Removes the MySQL test database
  mysql_db:
    db: test
    state: absent
  notify: Restart percona

- name: Adds ferm filtering
  template:
    src: "../templates/ferm.j2"
    dest: /etc/ferm/filter-input.d/60_mysql.conf
  when: percona_ferm_enabled
  tags: ferm
  notify: Restart ferm
